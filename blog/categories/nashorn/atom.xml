<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Nashorn | mohanraj nagasamy]]></title>
  <link href="http://mohanraj-nagasamy.github.io/blog/categories/nashorn/atom.xml" rel="self"/>
  <link href="http://mohanraj-nagasamy.github.io/"/>
  <updated>2014-04-14T19:16:20-06:00</updated>
  <id>http://mohanraj-nagasamy.github.io/</id>
  <author>
    <name><![CDATA[Mohanraj Nagasamy]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Interesting project: Nashorn]]></title>
    <link href="http://mohanraj-nagasamy.github.io/blog/2014/03/08/interesting-project-nashorn/"/>
    <updated>2014-03-08T20:57:22-07:00</updated>
    <id>http://mohanraj-nagasamy.github.io/blog/2014/03/08/interesting-project-nashorn</id>
    <content type="html"><![CDATA[<p>I am going to cover some of the interesting or <a href="http://projectodd.org">odd projects</a> that are being targeted to run on jvm that I came across recently in this multi post blogs.</p>

<p><img class="right <a" src="href="http://upload.wikimedia.org/wikipedia/commons/e/ec/Nashorn.Aberdeen.0007wakh.jpg">http://upload.wikimedia.org/wikipedia/commons/e/ec/Nashorn.Aberdeen.0007wakh.jpg</a>" width="350" height="450" title="Nashorn" ></p>

<h4>Nashorn:</h4>

<p><a href="http://openjdk.java.net/projects/nashorn/">Nashorn</a> is an upcoming JavaScript engine, developed fully in Java 8 Language by Oracle. And <a href="http://openjdk.java.net/projects/nashorn">open sourced</a> to OpenJDK as part of jdk8. It also validates the InvokeDynamic (<a href="http://jcp.org/en/jsr/detail?id=292">JSR-292</a>) feature in JDK 7; leverage all new language and JVM features in JDK 8.</p>

<!-- more -->


<p>We know the existing jvm (from jdk 1.1 onwards) ships with JavaScript engine, which is called Rhino. But the recent version of <a href="https://developer.mozilla.org/en-US/docs/Rhino">Rhino</a> has only been tested with JDK 1.4 and grater. I don’t know who in the world is using jdk 1.4 anyway.</p>

<h4>So what is need for the new project?</h4>

<p>Rhino is old code base and developed by using old jdk. And Nashorn significantly outperforms Rhino, it may not beat <a href="http://wnameless.wordpress.com/2013/12/10/javascript-engine-benchmarks-nashorn-vs-v8-vs-spidermonkey">Google’s V8</a>. And Nashorn implements a new <a href="https://github.com/szegedi/dynalink">meta-object</a> protocol that simplifies calling Java APIs from JavaScript, and enables seamless interactions between JavaScript and Java.  And all the <a href="http://docs.oracle.com/javase/6/docs/technotes/guides/jvmti">JVM TI</a> based tools such as debugging and profiling can read meta-object protocol.</p>

<p>But the real motivation for writing a new engine to validate <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/invoke/package-summary.html">InvokeDynamic</a> feature, which formally opened the door to <a href="http://docs.oracle.com/javase/7/docs/technotes/guides/vm/multiple-language-support.html">support non-Java</a> languages on jvm.</p>

<p>Nashorn engine passes ECMAScript 5.1 compliance tests. You can follow <a href="https://blogs.oracle.com/nashorn/">Oracle’s blog</a> for the updated infos. It is an interesting project to checkout.</p>
]]></content>
  </entry>
  
</feed>
